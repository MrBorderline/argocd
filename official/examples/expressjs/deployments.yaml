apiVersion: v1
kind: Namespace
metadata:
  name: expressjs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: expressjs
  name: expressjs
spec:
  selector:
    matchLabels:
      app: expressjs
  replicas: 1 # tells deployment to run 1 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: expressjs
    spec:
      containers:
      - name: expressjs
        image: borderlinejp17/expressjs:mongoose
        ports:
        - containerPort: 3000
---
  apiVersion: "apps/v1"
  kind: "Deployment"
  metadata: 
    name: "mongo-db"
    namespace: "expressjs"
  spec: 
    selector: 
      matchLabels: 
        app: "mongo-db"
    replicas: 1
    strategy: 
      type: "RollingUpdate"
      rollingUpdate: 
        maxSurge: 1
        maxUnavailable: 1
    minReadySeconds: 5
    template: 
      metadata: 
        labels: 
          app: "mongo-db"
      spec: 
        containers: 
          - name: "mongo-db"
            image: "mongo"
            imagePullPolicy: "Always"
            env: 
              - name: "MONGO_INITDB_ROOT_USERNAME"
                value: "admin"
              - name: "LALALALA"
                value: "admin"                
              - name: "MONGO_INITDB_ROOT_PASSWORD"
                value: "admin"
                
            ports: 
              - name: "mongodb"
                containerPort: 27017
            volumeMounts: 
              - name: "mongodb-persistent-storage"
                mountPath: "/data/db"
                
        volumes: 
          - name: "mongodb-persistent-storage"
            persistentVolumeClaim: 
              claimName: "mongodb-pvc"